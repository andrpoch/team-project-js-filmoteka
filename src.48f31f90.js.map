{"version":3,"sources":["js/services/apiTMDB.js","js/services/storage.js","js/services/pagination.js","js/services/modal.js","js/services/getGenresNames.js","js/services/index.js","js/genres.js","js/theme.js","js/templates/film_card.js","js/popular_movies.js","js/searchFilms.js","js/templates/film-modal.js","js/my_library.js","js/film-modal.js","js/up-btn.js","js/app.js","index.js"],"names":["ApiTMDB","ENDPOINTS","TRENDING","endpoint","params","url","res","fetch","ok","json","Promise","reject","statusText","URLSearchParams","page","getData","query","SEARCH_MOVIES","append_to_response","GET_MOVIE","GENRES","then","genres","newPage","newQuery","id","newId","newEndpoint","NOW_PLAYING","TOP_RATED","UPCOMING","api_key","include_adult","Storage","constructor","key","data","window","localStorage","setItem","JSON","stringify","error","parse","getItem","removeItem","item","movies","updatedMovies","get","save","filter","movie","find","MOVIES","WATCHED","QUEUED","THEME","Pagination","totalPages","callback","e","target","dataset","btn","closest","PREV","goToPage","NEXT","PAGE","targetPage","getTargetPage","handleButtonsAndDots","createList","buttons","getButtonsRef","hideElement","showElement","refs","dots","at","prev","disabled","next","ref","classList","add","remove","pagination","index","findIndex","length","document","querySelectorAll","container","innerHTML","markup","firstPage","lastPage","i","createLinkMarkup","insertAdjacentHTML","num","querySelector","addEventListener","handlePaginationClick","textContent","newTotalPages","newCallback","Modal","name","openModal","closeBtn","closeModal","modal","onBackdropClick","onEscDown","body","removeEventListener","code","openBtn","openBtnSecond","onModalOpenBtnClick","getGenresNames","genresIds","genresStorage","genresNames","map","api","KEYS","moviesStorage","queuedStorage","watchedStorage","themeStorage","getGenres","console","root","button","light","dark","SCHEME","LIGHT","DARK","loadTheme","theme","setAttribute","getCurrentTheme","systemTheme","matchMedia","matches","savedTheme","handleClick","currentTheme","newTheme","getInitialTheme","handleTheme","movieListRef","makeMoviesMarkup","title","release_date","first_air_date","poster_path","genre_ids","vote_average","year","Date","getFullYear","poster2x","notFoundImgRetina","poster","notFoundImg","rating","String","padEnd","join","renderMarkup","getMovies","gallery","categories","loader","onChangeCategory","currentTarget","resetView","activeBtn","replace","resetPage","renderMovies","moreMovies","showPagination","log","message","results","total_pages","getCategory","scrollIntoView","submitForm","info","ERROR_MESSAGE","handleSearch","searchMovies","handleSuccess","catch","handleError","err","hidePagination","searchFilms","preventDefault","elements","search","value","trim","reset","makeOneMovieMarkup","dataMovie","vote_count","original_title","overview","popularity","watched","queued","videos","genre","posterBig","notFoundImgBig","posterBig2x","notFoundImgBigRetina","trailer","video","type","trailerKey","MARKER","QUEUE","PER_PAGE","canScroll","logo","myLibA","homeA","watchedBtn","queueBtn","libBtnsContainer","searchForm","header","onClickMyLibBtn","contains","changeClassA","changeClassBtn","renderWatched","addMarker","marker","removeMarker","renderLibrary","preparePage","renderQueue","queue","Math","ceil","skip","slice","onClickMyHomeBtn","onClickMyWatchedBtn","onClickMyQueueBtn","classA","toggle","myLibrary","onModalCard","BTNS","TRAILER","ADD","REMOVE","SHOW","HIDE","backdropRef","modalRef","closeBtnRef","wrapperModalRef","trailerShown","clearModal","onModalOpenClick","event","cardRef","Number","checkMovie","getMovie","onModalButton","onBtnClick","deleteMovie","saveMovie","changeBtnTextWatched","changeBtnTextQueue","trailerRef","scrollTo","top","behavior","setTimeout","changeBtnTextTrailer","addUpBtn","footer","BTN","UP","DOWN","CLASS","HIDDEN","observer","IntersectionObserver","handleObserve","threshold","createBtn","direction","createElement","sprite","renderBtns","upBtn","downBtn","appendChild","hideBtn","showBtn","entries","forEach","isIntersecting","observe","app"],"mappings":"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","file":"src.48f31f90.js","sourceRoot":"../src","sourcesContent":["/**\n * по умолчанию страница 1\n * есть геттер и сеттер для page\n * метод .incrementPage увеличивает страницу на 1\n * метод .resetPage устанавливет страницу в 1\n * запрос трендов - метод .getTrending()\n * поиск фильмов по query(строка) - метод .searchMovies()\n *  перед использовнием метода установить query на своем экземпляре класса\n * поиск фильма по id(число) - метод .getMovie()\n *  перед использовнием метода установить id на своем экземпляре класса\n */\nexport default class ApiTMDB {\n  static #API_KEY = 'fadfbb72581e18342bb7490adda20bdd';\n  static #BASE_URL = 'https://api.themoviedb.org/3';\n  static ENDPOINTS = {\n    TRENDING: '/trending/movie/day',\n    NOW_PLAYING: '/movie/now_playing',\n    TOP_RATED: '/movie/top_rated',\n    UPCOMING: '/movie/upcoming',\n    SEARCH_MOVIES: '/search/movie',\n    GET_MOVIE: '/movie',\n    GENRES: '/genre/movie/list',\n  };\n  static #COMMON_PARAMS = new URLSearchParams({\n    api_key: ApiTMDB.#API_KEY,\n    include_adult: false,\n  });\n  #page = 1;\n  #endpoint = ApiTMDB.ENDPOINTS.TRENDING;\n  #query;\n  #id;\n\n  getData = async (endpoint, params = '') => {\n    const url = `${ApiTMDB.#BASE_URL}${endpoint}?${params}&${ApiTMDB.#COMMON_PARAMS}`;\n    const res = await fetch(url);\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res.statusText);\n  };\n\n  getCategory = () => {\n    const params = new URLSearchParams({\n      page: this.#page,\n    });\n    return this.getData(this.#endpoint, params);\n  };\n\n  searchMovies = () => {\n    const params = new URLSearchParams({\n      query: this.#query,\n      page: this.#page,\n    });\n    return this.getData(ApiTMDB.ENDPOINTS.SEARCH_MOVIES, params);\n  };\n\n  getMovie = () => {\n    const params = new URLSearchParams({\n      append_to_response: 'videos',\n    });\n    const endpoint = `${ApiTMDB.ENDPOINTS.GET_MOVIE}/${this.#id}`;\n    return this.getData(endpoint, params);\n  };\n\n  getGenres = () => {\n    const endpoint = `${ApiTMDB.ENDPOINTS.GENRES}`;\n    return this.getData(endpoint).then(res => res.genres);\n  };\n\n  getGenres = () => {\n    const endpoint = `${ApiTMDB.ENDPOINTS.GENRES}`;\n    return this.getData(endpoint).then(res => res.genres);\n  };\n\n  resetPage = () => {\n    this.#page = 1;\n  };\n  incrementPage = () => {\n    this.#page += 1;\n  };\n  get page() {\n    return this.#page;\n  }\n  set page(newPage) {\n    this.#page = newPage;\n  }\n  get query() {\n    return this.#query;\n  }\n  set query(newQuery) {\n    this.#query = newQuery;\n  }\n  get id() {\n    return this.#id;\n  }\n  set id(newId) {\n    this.#id = newId;\n  }\n\n  get endpoint() {\n    return this.#endpoint;\n  }\n  set endpoint(newEndpoint) {\n    this.#endpoint = newEndpoint;\n  }\n}\n","/** Ожидает при создании экземпляра строку с ключом локального хранилища.\n ** В статическом свойстве Storage.KEYS хранятся возможные ключи.\n ** .save(data) - сохранить данные в хранилище\n ** .get() - считать данные из хранилища\n ** .remove() - удалить запись из хранилища\n ** .saveMovie(movie) - сохранить один фильм (добавить в масиив)\n ** .deleteMovie(id) - удалить один фильм, по id (удалить из массива)\n ** .checkMovie(id) - проверить, есть ли фильм в хранилище, по id\n */\nexport default class Storage {\n  static KEYS = {\n    MOVIES: 'filmoteka/movies',\n    WATCHED: 'filmoteka/watched',\n    QUEUED: 'filmoteka/queued',\n    GENRES: 'filmoteka/genres',\n    THEME: 'filmoteka/theme',\n  };\n  constructor(key) {\n    this.key = key;\n  }\n  save = data => {\n    try {\n      window.localStorage.setItem(this.key, JSON.stringify(data));\n    } catch (error) {\n      return null;\n    }\n  };\n  get = () => {\n    try {\n      return JSON.parse(window.localStorage.getItem(this.key));\n    } catch (error) {\n      return null;\n    }\n  };\n  remove = () => {\n    try {\n      return localStorage.removeItem(this.key);\n    } catch (error) {\n      return null;\n    }\n  };\n  saveMovie = item => {\n    const movies = this.get() || [];\n    const updatedMovies = [item, ...movies];\n    this.save(updatedMovies);\n  };\n  deleteMovie = id => {\n    const movies = this.get();\n    const updatedMovies = movies?.filter(movie => movie.id !== id);\n    this.save(updatedMovies);\n  };\n  checkMovie = id => {\n    const movies = this.get();\n    const movie = movies?.find(movie => movie.id === id);\n    return !!movie;\n  };\n}\n","/**\n * Ожидает при вызове объект параметров:\n * 1. callback: callback-функция, которая будет вызвана при клике\n * на кнопку пагинации, в эту функцию будет передана новая страница.\n * 2. page: текущая страница, по умолчанию 1.\n * 3. totalPages: общее количество страниц, по умолчанию 1.\n * * Сеттеры и геттеры для pages и totalPages\n * * методы .hidePagination() и .showPagination()\n * * Пример создания экземпляра класса:\n * @example\n *  const pagination = new Pagination({\n *   page: 10,\n *   totalPages: 19,\n *   callback: page => {\n *     console.log(`Запрос на бекенд по странице № ${page} и рендер галлереи`);\n *   },\n * });\n */\nexport default class Pagination {\n  static #TYPES = {\n    PREV: 'prev',\n    NEXT: 'next',\n    PAGE: 'page',\n  };\n  #page;\n  #totalPages;\n  #callback;\n  #listFirstPage;\n  #listLastPage;\n  constructor({ page = 1, totalPages = 1, callback = () => {} }) {\n    this.refs = {\n      prev: document.querySelector('[data-btn=\"prev\"]'),\n      next: document.querySelector('[data-btn=\"next\"]'),\n      pagination: document.querySelector('.pagination'),\n      container: document.querySelector('.pagination__container'),\n      dots: document.querySelectorAll('.dots'),\n    };\n    this.refs.pagination.addEventListener('click', this.handlePaginationClick);\n    this.#totalPages = totalPages;\n    this.#callback = callback;\n    this.getButtonsRef()[1].textContent = totalPages;\n    this.goToPage(page);\n  }\n  handlePaginationClick = e => {\n    const target = e.target.dataset.btn ? e.target : e.target.closest('BUTTON');\n    const btn = target?.dataset.btn;\n    switch (btn) {\n      case Pagination.#TYPES.PREV:\n        if (this.#page === 1) return;\n        this.goToPage(this.#page - 1);\n        this.#callback(this.#page);\n        break;\n      case Pagination.#TYPES.NEXT:\n        if (this.#page === this.#totalPages) return;\n        this.goToPage(this.#page + 1);\n        this.#callback(this.#page);\n        break;\n      case Pagination.#TYPES.PAGE:\n        const targetPage = this.getTargetPage(e.target);\n        if (targetPage === this.#page) return;\n        this.goToPage(targetPage);\n        this.#callback(this.#page);\n        break;\n      default:\n        return;\n    }\n  };\n  goToPage = targetPage => {\n    if (targetPage > 1 && targetPage < this.#totalPages) {\n      this.#page = targetPage;\n    } else if (targetPage <= 1) {\n      this.#page = 1;\n    } else this.#page = this.#totalPages;\n    this.#listFirstPage = this.#page - 2 > 1 ? this.#page - 2 : 1;\n    this.#listLastPage = this.#page + 2 < this.#totalPages ? this.#page + 2 : this.#totalPages;\n    this.handleButtonsAndDots();\n    this.createList();\n  };\n  handleButtonsAndDots = () => {\n    const buttons = [...this.getButtonsRef()];\n\n    if (this.#listFirstPage <= 1) {\n      this.hideElement(buttons[0]);\n    } else {\n      this.showElement(buttons[0]);\n    }\n\n    if (this.#listFirstPage < 3) {\n      this.hideElement(this.refs.dots[0]);\n    } else {\n      this.showElement(this.refs.dots[0]);\n    }\n\n    if (this.#listLastPage >= this.#totalPages) {\n      this.hideElement(buttons.at(-1));\n    } else {\n      this.showElement(buttons.at(-1));\n    }\n\n    if (this.#listLastPage > this.#totalPages - 2) {\n      this.hideElement(this.refs.dots[1]);\n    } else {\n      this.showElement(this.refs.dots[1]);\n    }\n\n    if (this.#page === 1) {\n      this.refs.prev.disabled = true;\n    } else {\n      this.refs.prev.disabled = false;\n    }\n    if (this.#page === this.#totalPages) {\n      this.refs.next.disabled = true;\n    } else {\n      this.refs.next.disabled = false;\n    }\n  };\n  hideElement = ref => {\n    ref.classList.add('is-hidden');\n  };\n  showElement = ref => {\n    ref.classList.remove('is-hidden');\n  };\n  hidePagination = () => {\n    this.hideElement(this.refs.pagination);\n  };\n  showPagination = () => {\n    this.showElement(this.refs.pagination);\n  };\n  getTargetPage = target => {\n    const buttons = [...this.getButtonsRef()];\n    const index = buttons.findIndex(e => e === target);\n    if (index === 0) return 1;\n    if (index === buttons.length - 1) return this.#totalPages;\n    return index - 1 + this.#listFirstPage;\n  };\n  getButtonsRef = () => {\n    return document.querySelectorAll('[data-btn=\"page\"]');\n  };\n  createList = () => {\n    this.refs.container.innerHTML = '';\n    let markup = '';\n    let firstPage = this.#listFirstPage < 1 ? 1 : this.#listFirstPage;\n    let lastPage = this.#listLastPage > this.#totalPages ? this.#totalPages : this.#listLastPage;\n    for (let i = firstPage; i <= lastPage; i += 1) {\n      markup += this.createLinkMarkup(i);\n    }\n    this.refs.container.insertAdjacentHTML('beforeend', markup);\n  };\n  createLinkMarkup = num => {\n    const active = num === this.#page ? 'pagination__button--active' : '';\n    return `<span class=\"pagination__button ${active}\" data-btn=\"page\">${num}</span>`;\n  };\n  get page() {\n    return this.#page;\n  }\n  set page(newPage) {\n    this.#page = newPage;\n  }\n  get totalPages() {\n    return this.#totalPages;\n  }\n  set totalPages(newTotalPages) {\n    this.#totalPages = newTotalPages;\n    [...this.getButtonsRef()].at(-1).textContent = this.#totalPages;\n    this.goToPage(this.#page);\n  }\n  get callback() {\n    return this.#callback;\n  }\n  set callback(newCallback) {\n    this.#callback = newCallback;\n  }\n}\n","/**\n * Задать кнопке открытия модального окна аттрибут data-modal-open=\"[name]\"\n * * Задать второй кнопке открытия модального окна data-modal-open=\"[name]-second\"\n * * Задать backdrop модального окна аттрибуты data-modal=\"[name]\", class=\"is-hidden\"\n * * Задать кнопке закрытия модального окна аттрибут data-modal-close=\"[name]\"\n * * Модальное окно закрывается по клику на кнопку закрытия, по клику в бэкдроп,\n * по нажатию клавиши \"Esc\"\n */\nclass Modal {\n  constructor(name) {\n    this.refs = {\n      modal: document.querySelector(`[data-modal=\"${name}\"]`),\n      openBtn: document.querySelector(`[data-modal-open=\"${name}\"]`),\n      openBtnSecond: document.querySelector(`[data-modal-open=\"${name}-second\"]`),\n      closeBtn: document.querySelector(`[data-modal-close=\"${name}\"]`),\n    };\n    this.refs.openBtn.addEventListener('click', this.onModalOpenBtnClick);\n    this.refs.openBtnSecond?.addEventListener('click', this.onModalOpenBtnClick);\n  }\n  onModalOpenBtnClick = () => {\n    this.openModal();\n    this.refs.closeBtn.addEventListener('click', this.closeModal);\n    this.refs.modal.addEventListener('click', this.onBackdropClick);\n    document.addEventListener('keydown', this.onEscDown);\n  };\n  openModal = () => {\n    this.refs.modal.classList.remove('is-hidden');\n    document.body.classList.add('modal-open');\n  };\n  closeModal = () => {\n    this.refs.modal.classList.add('is-hidden');\n    document.body.classList.remove('modal-open');\n    this.refs.closeBtn.removeEventListener('click', this.closeModal);\n    this.refs.modal.removeEventListener('click', this.onBackdropClick);\n    document.removeEventListener('keydown', this.onEscDown);\n  };\n  onBackdropClick = e => {\n    if (e.target !== this.refs.modal) return;\n    this.closeModal();\n  };\n  onEscDown = e => {\n    if (e.code !== 'Escape') return;\n    this.closeModal();\n  };\n}\nexport { Modal };\n","import { genresStorage } from '../services';\n\nfunction getGenresNames(genresIds) {\n  const genres = genresStorage.get();\n  const genresNames = genresIds.map(id => {\n    const { name } = genres.find(item => item.id === id);\n    return name;\n  });\n  return genresNames;\n}\nexport { getGenresNames };\n","import ApiTMDB from './apiTMDB';\nimport Storage from './storage';\nimport Pagination from './pagination';\n\nconst api = new ApiTMDB();\nconst genresStorage = new Storage(Storage.KEYS.GENRES);\nconst moviesStorage = new Storage(Storage.KEYS.MOVIES);\nconst queuedStorage = new Storage(Storage.KEYS.QUEUED);\nconst watchedStorage = new Storage(Storage.KEYS.WATCHED);\nconst themeStorage = new Storage(Storage.KEYS.THEME);\nconst pagination = new Pagination({});\n\nexport { Modal } from './modal';\nexport { getGenresNames } from './getGenresNames';\nexport {\n  api,\n  genresStorage,\n  moviesStorage,\n  queuedStorage,\n  watchedStorage,\n  themeStorage,\n  pagination,\n  ApiTMDB,\n};\n","import { api, genresStorage } from './services';\nasync function genres() {\n  try {\n    const genres = await api.getGenres();\n    genresStorage.save(genres);\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport default genres;\n","import { themeStorage } from './services';\nconst refs = {\n  root: document.querySelector(':root'),\n  button: document.querySelector('.theme'),\n  light: document.querySelector('[data-theme=\"light\"]'),\n  dark: document.querySelector('[data-theme=\"dark\"]'),\n};\nconst THEME = {\n  SCHEME: 'color-scheme',\n  LIGHT: 'light',\n  DARK: 'dark',\n};\n\nfunction loadTheme(theme) {\n  if (theme === THEME.LIGHT) {\n    refs.light.classList.add('active');\n    refs.dark.classList.remove('active');\n  } else {\n    refs.dark.classList.add('active');\n    refs.light.classList.remove('active');\n  }\n  refs.root.setAttribute(THEME.SCHEME, theme);\n}\n\nfunction getCurrentTheme() {\n  const systemTheme = window.matchMedia(`(prefers-${THEME.SCHEME}: ${THEME.LIGHT})`).matches\n    ? THEME.LIGHT\n    : THEME.DARK;\n  const savedTheme = themeStorage.get();\n  return savedTheme ? savedTheme : systemTheme;\n}\n\nfunction handleClick() {\n  const currentTheme = getCurrentTheme();\n  const newTheme = currentTheme === THEME.LIGHT ? THEME.DARK : THEME.LIGHT;\n  themeStorage.save(newTheme);\n  loadTheme(newTheme);\n}\n\nfunction getInitialTheme() {\n  const theme = getCurrentTheme();\n  loadTheme(theme);\n}\n\nexport default function handleTheme() {\n  refs.button.addEventListener('click', handleClick);\n  window.addEventListener('DOMContentLoaded', getInitialTheme);\n}\n","import { getGenresNames } from '../services';\nimport notFoundImg from '../../images/film_card/poster-img.jpg';\nimport notFoundImgRetina from '../../images/film_card/poster-img@2x.jpg';\nconst movieListRef = document.querySelector('.gallery');\n\nconst makeMoviesMarkup = movies =>\n  movies\n    .map(\n      ({\n        title,\n        release_date,\n        first_air_date,\n        poster_path,\n        id,\n        genre_ids: genresIds,\n        genres,\n        vote_average,\n      }) => {\n        const genresNames = genresIds ? getGenresNames(genresIds) : genres.map(({ name }) => name);\n        const year = new Date(release_date || first_air_date).getFullYear() || '';\n        const poster2x = poster_path\n          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n          : notFoundImgRetina;\n        const poster = poster_path ? `https://image.tmdb.org/t/p/w300${poster_path}` : notFoundImg;\n        let rating = 'N/A';\n        if (vote_average) {\n          rating = vote_average === 10 ? '10.0' : String(vote_average).padEnd(3, '.0');\n        }\n        return `\n      <li class=\"card-item\" data-id=\"${id}\">\n        <picture>\n          <source\n          srcset=\"\n          ${poster} 1x,\n          ${poster2x} 2x,\n          \" \n        />\n        <img class=\"movie-img\"\n        src=\"${poster}\"\n        alt=\"${title}\"\n        width=\"280\"\n        height=\"398\"\n        />\n        </picture>\n        <div class = \"movie-card\">\n        <h5 class=\"movie-title\">${title}</h5>\n        <div class=\"container_movie-info\">\n        <p class=\"movie-info\">${genresNames.join(', ') || 'No genres found'} | ${year}</p>\n        <p class=\"movie-rating\">${rating}</p>\n        </div>\n        </div>\n        </li>\n        `;\n      },\n    )\n    .join('');\n\nconst renderMarkup = movies => {\n  const markup = makeMoviesMarkup(movies);\n  movieListRef.insertAdjacentHTML('beforeend', markup);\n};\n\nexport { renderMarkup };\n","import { renderMarkup } from './templates/film_card';\nimport { api, pagination, ApiTMDB } from './services';\n\nconst refs = {\n  gallery: document.querySelector('.gallery'),\n  categories: document.querySelector('.gallery-categories'),\n  loader: document.querySelector('.loader'),\n};\n\nrefs.categories.addEventListener('click', onChangeCategory);\n\nfunction onChangeCategory(e) {\n  if (e.target === e.currentTarget) {\n    return;\n  }\n\n  const newEndpoint = e.target.dataset.endpoint;\n  if (ApiTMDB.ENDPOINTS[newEndpoint]) {\n    api.endpoint = ApiTMDB.ENDPOINTS[newEndpoint];\n  }\n  resetView();\n  getMovies();\n\n  const activeBtn = e.currentTarget.querySelector('.btn--on');\n  activeBtn?.classList.replace('btn--on', 'btn--off');\n  e.target.classList.replace('btn--off', 'btn--on');\n}\nconst resetView = () => {\n  api.resetPage();\n  refs.gallery.innerHTML = '';\n};\n\nasync function getMovies() {\n  try {\n    const totalPages = await renderMovies();\n    pagination.page = api.page;\n    pagination.totalPages = totalPages;\n    pagination.callback = moreMovies;\n    pagination.showPagination();\n  } catch (error) {\n    console.log(error.message);\n    refs.loader.classList.add('is-hidden');\n  }\n}\n\nasync function renderMovies() {\n  refs.loader.classList.remove('is-hidden');\n  const { results, total_pages: totalPages } = await api.getCategory();\n  refs.gallery.innerHTML = ' ';\n  refs.categories.classList.remove('is-hidden');\n  renderMarkup(results);\n  refs.loader.classList.add('is-hidden');\n  return totalPages;\n}\n\nasync function moreMovies() {\n  try {\n    api.page = pagination.page;\n    await renderMovies();\n    refs.gallery.scrollIntoView();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport default getMovies;\n","import { renderMarkup } from './templates/film_card';\nimport { api, pagination, moviesStorage } from './services';\n\nconst submitForm = document.querySelector('.search__form');\nconst info = document.querySelector('.gallery-info');\nconst gallery = document.querySelector('.gallery');\nconst categories = document.querySelector('.gallery-categories');\nconst loader = document.querySelector('.loader');\nconst ERROR_MESSAGE = 'Search is not successful. Enter the correct movie name.';\n\nconst handleSearch = page => {\n  api.page = page;\n  loader.classList.remove('is-hidden');\n  api\n    .searchMovies()\n    .then(data => {\n      handleSuccess(data);\n      gallery.scrollIntoView();\n    })\n    .catch(handleError);\n};\n\nconst handleSuccess = ({ results, total_pages: totalPages }) => {\n  info.innerHTML = '';\n  gallery.innerHTML = '';\n  renderMarkup(results);\n  moviesStorage.save(results);\n  pagination.callback = handleSearch;\n  pagination.page = api.page;\n  pagination.totalPages = totalPages;\n  loader.classList.add('is-hidden');\n};\nconst handleError = err => {\n  gallery.innerHTML = '';\n  pagination.hidePagination();\n  loader.classList.add('is-hidden');\n  if (err) {\n    console.error(err);\n    return;\n  }\n  info.innerHTML = ERROR_MESSAGE;\n};\nconst searchFilms = async e => {\n  e.preventDefault();\n  const query = e.target.elements.search.value.trim();\n  if (!query) {\n    return;\n  }\n  api.page = 1;\n  api.query = query;\n  try {\n    categories.classList.add('is-hidden');\n    loader.classList.remove('is-hidden');\n    const data = await api.searchMovies();\n    if (!data.results.length) {\n      handleError();\n      return;\n    }\n    handleSuccess(data);\n    pagination.showPagination();\n    e.target.reset();\n  } catch (error) {\n    handleError(error);\n  }\n};\nconst search = () => {\n  submitForm.addEventListener('submit', searchFilms);\n};\nexport { handleSearch, search };\n","// Функция создающая разметку для одного фильма\nimport notFoundImg from '../../images/film_card/poster-img.jpg';\nimport notFoundImgBig from '../../images/film_card/poster-big.jpg';\nimport notFoundImgRetina from '../../images/film_card/poster-big@2x.jpg';\nimport notFoundImgBigRetina from '../../images/film_card/poster-img@2x.jpg';\n\nexport default function makeOneMovieMarkup(dataMovie) {\n  const {\n    title,\n    poster_path,\n    genres,\n    vote_average,\n    vote_count,\n    original_title,\n    overview,\n    popularity,\n    watched,\n    queued,\n    videos,\n  } = dataMovie;\n  const genresNames = genres.map(genre => genre.name).join(', ');\n  const poster = poster_path ? `https://image.tmdb.org/t/p/w342${poster_path}` : notFoundImg;\n  const poster2x = poster_path\n    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n    : notFoundImgRetina;\n  const posterBig = poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : notFoundImgBig;\n  const posterBig2x = poster_path\n    ? `https://image.tmdb.org/t/p/w780${poster_path}`\n    : notFoundImgBigRetina;\n  let trailer = videos.results.find(\n    video => video['iso_639_1'] === 'en' && video.type === 'Trailer',\n  );\n  trailer = trailer ? trailer : videos.results[0];\n  const trailerKey = trailer?.key;\n  return `<div class=\"modal__content\">\n        <div class=\"poster__wrapper\">\n            <picture>\n                <source\n                  srcset=\"\n                    ${poster} 1x,\n                    ${poster2x} 2x\n                  \"\n                  media=\"(max-width:1023px)\"\n                />\n                <source\n                  srcset=\"\n                    ${posterBig} 1x,\n                    ${posterBig2x} 2x\n                  \"\n                  media=\"(min-width:1024px)\"\n                />\n                <img class=\"poster__img\" alt=\"${title}\" src=\"${poster}\" loading=\"lazy\" />\n              </picture>\n        </div>\n        <div class=\"movie\">\n            <h2 class=\"movie__title uppercase\">${title}</h2>\n            <div class=\"movie__statistic\">\n                <ul class=\"movie__list--left\">\n                    <li class=\"movie__item--left\">Vote &#47 Votes\n                    </li>\n                    <li class=\"movie__item--left\">Popularity\n                    </li>\n                    <li class=\"movie__item--left\">Original Title\n                    </li>\n                    <li class=\"movie__item--left\">Genre\n                    </li>\n                </ul>\n                <ul class=\"movie__list--right\">\n                    <li class=\"movie__item--right\">\n                        <span class=\"movie__average\">${vote_average}</span>\n                        <span>&#47</span>\n                        <span class=\"movie__count\">${vote_count}</span>\n                    </li>\n                    <li class=\"movie__item--right\">${popularity}\n                    </li>\n                    <li class=\"movie__item--right uppercase\">${original_title}\n                    </li>\n                    <li class=\"movie__item--right\">${genresNames}\n                    </li>\n                </ul>\n            </div>\n            <div class=\"movie__description\">\n                <h3 class=\"movie__about uppercase\">About</h3>\n                <p class=\"movie__text\">${overview}</p>\n            </div>\n            <div class=\"movie__btn buttons__container\">\n                    <button type=\"button\" class=\"btn--modal btn--on\" data-btn=\"watched\">${\n                      watched ? 'Remove from' : 'Add to'\n                    } watched</button>\n                    <button type=\"button\" class=\"btn--modal btn--on\" data-btn=\"queue\">${\n                      queued ? 'Remove from' : 'Add to'\n                    } queue</button>\n                    ${\n                      trailerKey\n                        ? `<button type=\"button\" class=\"btn--modal btn--on\" data-btn=\"trailer\">Show trailer</button>`\n                        : ''\n                    }\n            </div>\n        </div>\n    </div>\n    ${\n      trailerKey\n        ? `<div class=\"trailer is-hidden\">\n      <iframe\n      class=\"trailer__iframe\"\n      width=\"240\"\n      height=\"135\"\n      src=\"https://www.youtube.com/embed/${trailerKey}\"\n      title=\"${trailer.type}\"\n      frameborder=\"0\"\n      allow=\"accelerometer;autoplay;clipboard-write;encrypted-media;gyroscope; picture-in-picture\"\n      allowfullscreen>\n      </iframe>\n    </div>`\n        : '<div></div>'\n    }\n    `;\n}\n","import { watchedStorage, queuedStorage, pagination } from './services';\nimport { renderMarkup } from './templates/film_card';\nimport getMovies from './popular_movies';\nimport { handleSearch } from './searchFilms';\n\nconst MARKER = {\n  WATCHED: 'watched',\n  QUEUE: 'queue',\n};\nconst PER_PAGE = 18;\nlet page = 1;\nlet canScroll = false;\nconst refs = {\n  logo: document.querySelector('.header__logo-link'),\n  myLibA: document.querySelector('[data-nav=\"myLibrary\"]'),\n  homeA: document.querySelector('[data-nav=\"home\"]'),\n  watchedBtn: document.querySelector('[data-btn=\"watched\"]'),\n  queueBtn: document.querySelector('[data-btn=\"queue\"]'),\n  libBtnsContainer: document.querySelector('.buttons__container--header'),\n  searchForm: document.querySelector('.search__form'),\n  info: document.querySelector('.gallery-info'),\n  gallery: document.querySelector('.gallery'),\n  categories: document.querySelector('.gallery-categories'),\n  header: document.querySelector('.header'),\n};\n\nfunction onClickMyLibBtn() {\n  if (refs.myLibA.classList.contains('current')) {\n    return;\n  }\n  changeClassA('current');\n  changeClassBtn('btn--on', 'btn--off');\n  refs.libBtnsContainer.classList.remove('is-hidden');\n  refs.searchForm.classList.add('is-hidden');\n  refs.header.classList.add('myLib');\n  page = 1;\n  refs.categories.classList.add('is-hidden');\n  canScroll = false;\n  renderWatched();\n  canScroll = true;\n  pagination.showPagination();\n}\n\nfunction addMarker(marker) {\n  refs.gallery.classList.add(marker);\n}\nfunction removeMarker(marker) {\n  refs.gallery.classList.remove(marker);\n}\n\nfunction renderWatched(newPage) {\n  refs.gallery.innerHTML = '';\n  const watched = watchedStorage.get() || [];\n  removeMarker(MARKER.QUEUE);\n  addMarker(MARKER.WATCHED);\n  pagination.callback = renderWatched;\n  const watchedPage = preparePage(watched, newPage);\n  renderLibrary(watchedPage);\n}\n\nfunction renderQueue(newPage = 1) {\n  refs.gallery.innerHTML = '';\n  const queue = queuedStorage.get() || [];\n  removeMarker(MARKER.WATCHED);\n  addMarker(MARKER.QUEUE);\n  pagination.callback = renderQueue;\n  const queuePage = preparePage(queue, newPage);\n  renderLibrary(queuePage);\n}\n\nfunction preparePage(data, newPage) {\n  page = newPage ? newPage : page;\n  const totalPages = Math.ceil(data.length / PER_PAGE);\n  page = page > totalPages ? totalPages : page;\n  pagination.page = page;\n  pagination.totalPages = totalPages;\n  const skip = (page - 1) * PER_PAGE;\n  return data.slice(skip, PER_PAGE * page);\n}\n\nfunction renderLibrary(movies) {\n  if (!movies || movies.length === 0) {\n    refs.info.innerHTML = 'Please add something to library';\n    pagination.hidePagination();\n    return;\n  }\n  refs.info.innerHTML = '';\n  renderMarkup(movies);\n  console.log(canScroll);\n  if (canScroll) {\n    refs.gallery.scrollIntoView();\n  }\n}\n\nfunction onClickMyHomeBtn() {\n  if (refs.homeA.classList.contains('current')) {\n    return;\n  }\n  removeMarker(MARKER.WATCHED);\n  removeMarker(MARKER.QUEUE);\n  changeClassA('current');\n  refs.libBtnsContainer.classList.add('is-hidden');\n  refs.searchForm.classList.remove('is-hidden');\n  refs.searchForm.elements.search.value = '';\n  refs.header.classList.remove('myLib');\n  refs.info.innerHTML = '';\n  refs.categories.classList.remove('is-hidden');\n  getMovies();\n}\n\nfunction onClickMyWatchedBtn() {\n  changeClassBtn('btn--on', 'btn--off');\n  page = 1;\n  canScroll = false;\n  renderWatched();\n  canScroll = true;\n}\n\nfunction onClickMyQueueBtn() {\n  changeClassBtn('btn--off', 'btn--on');\n  page = 1;\n  canScroll = false;\n  renderQueue();\n  canScroll = true;\n}\n\nfunction changeClassBtn(add, remove) {\n  refs.watchedBtn.classList.add(add);\n  refs.watchedBtn.classList.remove(remove);\n  refs.queueBtn.classList.add(remove);\n  refs.queueBtn.classList.remove(add);\n}\n\nfunction changeClassA(classA) {\n  refs.myLibA.classList.toggle(classA);\n  refs.homeA.classList.toggle(classA);\n}\n\nfunction myLibrary() {\n  refs.logo.addEventListener('click', onClickMyHomeBtn);\n  refs.myLibA.addEventListener('click', onClickMyLibBtn);\n  refs.homeA.addEventListener('click', onClickMyHomeBtn);\n  refs.watchedBtn.addEventListener('click', onClickMyWatchedBtn);\n  refs.queueBtn.addEventListener('click', onClickMyQueueBtn);\n}\n\nexport { MARKER, myLibrary, renderWatched, renderQueue };\n","import { api, watchedStorage, queuedStorage } from './services';\nimport makeOneMovieMarkup from './templates/film-modal';\nimport { MARKER, renderWatched, renderQueue } from './my_library';\n\nconst BTNS = {\n  QUEUE: 'queue',\n  WATCHED: 'watched',\n  TRAILER: 'trailer',\n  ADD: 'Add to',\n  REMOVE: 'Remove from',\n  SHOW: 'Show',\n  HIDE: 'Hide',\n};\n// получаем ссылку на бэкдроп\nconst backdropRef = document.querySelector(`[data-modal=\"movie-one\"]`);\n// получаем ссылку на модалку\nconst modalRef = document.querySelector(`.modal`);\n// получаем ссылку на галерею в которую рендерятся карточки фильмов\nconst movieListRef = document.querySelector('.gallery');\n// получаем ссылку на кнопку закрытия модалки\nconst closeBtnRef = document.querySelector(`[data-modal-close=\"movie-one\"]`);\nconst wrapperModalRef = document.querySelector('.wrapper-modal');\nconst loader = document.querySelector('.loader');\n\nlet dataMovie = {};\nlet watched = false;\nlet queued = false;\nlet trailerShown = false;\n\n// Функция для тестировки запроса по получению 20 фильмов\n// async function fetchMovies() {\n//   try {\n//     const data = await api.getTrending();\n//     const { results } = data;\n//     renderMarkup(results);\n//   } catch (error) {\n//     console.log(error);\n//     handleError();\n//   }\n// }\n\n// Функция для очищения разметки в модальном окне\nfunction clearModal() {\n  wrapperModalRef.innerHTML = '';\n}\n\n// Функция для сообщения пользователю об ошибке\nconst handleError = error => {\n  loader.classList.add('is-hidden');\n  console.log(error.message);\n};\n\n// Функция для модального окна\nasync function onModalOpenClick(event) {\n  const cardRef = event.target.closest('.card-item');\n  if (event.target === event.currentTarget || !cardRef) {\n    return;\n  }\n  const id = Number(cardRef.dataset.id);\n  loader.classList.remove('is-hidden');\n  watched = watchedStorage.checkMovie(id);\n  queued = queuedStorage.checkMovie(id);\n  api.id = id;\n  try {\n    dataMovie = await api.getMovie();\n\n    wrapperModalRef.insertAdjacentHTML(\n      'beforeend',\n      makeOneMovieMarkup({ ...dataMovie, watched, queued }),\n    );\n\n    openModal();\n    loader.classList.add('is-hidden');\n    closeBtnRef.addEventListener('click', closeModal);\n    backdropRef.addEventListener('click', onBackdropClick);\n    document.addEventListener('keydown', onEscDown);\n    wrapperModalRef.querySelector('.buttons__container').addEventListener('click', onModalButton);\n  } catch (error) {\n    handleError(error);\n  }\n}\n\nfunction openModal() {\n  backdropRef.classList.remove('is-hidden');\n  document.body.classList.add('modal-open');\n}\n\nfunction closeModal() {\n  backdropRef.classList.add('is-hidden');\n  document.body.classList.remove('modal-open');\n  closeBtnRef.removeEventListener('click', onBtnClick);\n  backdropRef.removeEventListener('click', onBackdropClick);\n  document.removeEventListener('keydown', onEscDown);\n  wrapperModalRef.querySelector('.buttons__container').removeEventListener('click', onModalButton);\n  clearModal();\n}\nfunction onBackdropClick(e) {\n  if (e.target !== backdropRef) return;\n  closeModal();\n}\nfunction onEscDown(e) {\n  if (e.code !== 'Escape') return;\n  closeModal();\n}\nfunction onBtnClick(e) {\n  if (e.code !== closeBtnRef) return;\n  closeModal();\n}\nfunction onModalButton({ target }) {\n  const btn = target.dataset.btn;\n  if (!btn) return;\n  switch (btn) {\n    case BTNS.WATCHED:\n      if (watched) {\n        watchedStorage.deleteMovie(dataMovie.id);\n      } else {\n        watchedStorage.saveMovie(dataMovie);\n      }\n      watched = !watched;\n      changeBtnTextWatched(target);\n      if (movieListRef.classList.contains(MARKER.WATCHED)) {\n        renderWatched();\n      }\n      return;\n    case BTNS.QUEUE:\n      if (queued) {\n        queuedStorage.deleteMovie(dataMovie.id);\n      } else {\n        queuedStorage.saveMovie(dataMovie);\n      }\n      queued = !queued;\n      changeBtnTextQueue(target);\n      if (movieListRef.classList.contains(MARKER.QUEUE)) {\n        renderQueue();\n      }\n      return;\n    case BTNS.TRAILER:\n      const trailerRef = document.querySelector('.trailer');\n      if (trailerShown) {\n        modalRef.scrollTo({\n          top: 0,\n          behavior: 'smooth',\n        });\n        setTimeout(() => trailerRef.classList.add('is-hidden'), 250);\n      } else {\n        trailerRef.classList.remove('is-hidden');\n        setTimeout(\n          () =>\n            modalRef.scrollTo({\n              top: 500,\n              behavior: 'smooth',\n            }),\n          250,\n        );\n      }\n      trailerShown = !trailerShown;\n      changeBtnTextTrailer(target);\n      return;\n    default:\n      return;\n  }\n}\n\nfunction changeBtnTextWatched(btn) {\n  btn.textContent = `${watched ? BTNS.REMOVE : BTNS.ADD} ${BTNS.WATCHED}`;\n}\n\nfunction changeBtnTextQueue(btn) {\n  btn.textContent = `${queued ? BTNS.REMOVE : BTNS.ADD} ${BTNS.QUEUE}`;\n}\n\nfunction changeBtnTextTrailer(btn) {\n  btn.textContent = `${trailerShown ? BTNS.HIDE : BTNS.SHOW} ${BTNS.TRAILER}`;\n}\n\nfunction onModalCard() {\n  //  временный вызов функции для получения 20 карточек и их рендера\n  //   fetchMovies();\n  // вешаем слушателя на общего родителя галерею\n  movieListRef.addEventListener('click', onModalOpenClick);\n}\nexport default onModalCard;\n","import sprite from '../images/sprite.svg';\n\nconst refs = {\n  header: document.querySelector('.header'),\n  footer: document.querySelector('.footer'),\n};\n\nconst BTN = {\n  UP: 'up',\n  DOWN: 'down',\n  CLASS: 'btn-up',\n  HIDDEN: 'is-hidden',\n};\n\nconst observer = new IntersectionObserver(handleObserve, { threshold: 0 });\n\nfunction createBtn(direction) {\n  const btn = document.createElement('button');\n  const data = direction === BTN.UP ? BTN.UP : BTN.DOWN;\n  btn.setAttribute('data-direction', data);\n  btn.setAttribute('aria-label', `Scroll page ${direction}`);\n  btn.classList.add(`${BTN.CLASS}__btn`, BTN.HIDDEN);\n  btn.innerHTML = `\n    <svg class=\"${BTN.CLASS}__svg\" width=\"32\" height=\"32\">\n      <use href=\"${sprite}#icon-circle-${direction}\"></use>\n    </svg>\n  `;\n  return btn;\n}\n\nfunction renderBtns() {\n  refs.upBtn = createBtn(BTN.UP);\n  refs.downBtn = createBtn(BTN.DOWN);\n  const container = document.createElement('div');\n  container.classList.add(BTN.CLASS);\n  container.appendChild(refs.upBtn);\n  container.appendChild(refs.downBtn);\n  document.querySelector('main').appendChild(container);\n  container.addEventListener('click', handleClick);\n}\n\nfunction handleClick(e) {\n  const target = e.target.dataset.direction ? e.target : e.target.closest('BUTTON');\n  const direction = target?.dataset.direction;\n  switch (direction) {\n    case BTN.UP:\n      refs.header.scrollIntoView();\n      return;\n    case BTN.DOWN:\n      refs.footer.scrollIntoView();\n      return;\n    default:\n      return;\n  }\n}\n\nfunction hideBtn(target) {\n  if (target === refs.header) {\n    refs.upBtn.classList.add(BTN.HIDDEN);\n  } else {\n    refs.downBtn.classList.add(BTN.HIDDEN);\n  }\n}\nfunction showBtn(target) {\n  if (target === refs.header) {\n    refs.upBtn.classList.remove(BTN.HIDDEN);\n  } else {\n    refs.downBtn.classList.remove(BTN.HIDDEN);\n  }\n}\n\nfunction handleObserve(entries) {\n  entries.forEach(({ isIntersecting, target }) => {\n    if (isIntersecting) {\n      hideBtn(target);\n    } else {\n      showBtn(target);\n    }\n  });\n}\n\nfunction addUpBtn() {\n  renderBtns();\n  observer.observe(refs.header);\n  observer.observe(refs.footer);\n}\n\nexport default addUpBtn;\n","import genres from './genres';\nimport handleTheme from './theme';\nimport popularMovies from './popular_movies';\nimport { search } from './searchFilms';\nimport filmModal from './film-modal';\nimport { myLibrary } from './my_library';\nimport addUpBtn from './up-btn';\nimport { Modal } from './services/modal';\n\nexport default async function app() {\n  handleTheme();\n  await genres();\n  await popularMovies();\n  search();\n  filmModal();\n  myLibrary();\n  addUpBtn();\n  new Modal('team');\n}\n","import './sass/main.scss';\nimport app from './js/app';\napp();\n"]}